# =======================
# Shiro INI configuration
# =======================
[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#authenticationQuery
jdbcRealm.authenticationQuery = SELECT password FROM "ECIStuff".usuarios WHERE email = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
jdbcRealm.userRolesQuery = SELECT role FROM "ECIStuff".usuarios WHERE email = ?


#Configuration dataBase
dataSource = org.postgresql.jdbc3.Jdbc3PoolingDataSource
dataSource.serverName = ec2-3-218-171-44.compute-1.amazonaws.com
dataSource.databaseName = d3bithrgc9i3mf
dataSource.ssl = true
dataSource.sslfactory = org.postgresql.ssl.NonValidatingFactory
dataSource.portNumber = 5432
dataSource.user = uornmksfjilhur
dataSource.password = 8c94e95b69b0bf5aecc7e673060be772e1820b3212eea998d6a3fb985db9d450
jdbcRealm.dataSource = $dataSource

#Definicion de de filtros y rutas
#si no esta authc se redirige a /faces/login.xhtml
authc.loginUrl = /faces/login.xhtml
#si esta authc no puede acceder a /faces/login.xhtml
notauthc = edu.eci.cvds.security.Autenticated
[urls]
/= notauthc
/faces/login.xhtml = notauthc
/faces/consultarRecursos.xhtml = authc
/faces/pruebaEjemplo.xhtml = authc
/faces/registrarRecurso.xhtml = authc, roles[Administrador]
/faces/consultarRecursos.xhtml = authc
/faces/consultarReserva.xhtml = authc

